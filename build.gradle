plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-resteasy-reactive'
    //implementation 'io.quarkus:quarkus-oidc'
    implementation 'io.quarkus:quarkus-elytron-security-properties-file'
    implementation 'io.quarkiverse.groovy:quarkus-groovy:3.8.1'
    implementation 'io.quarkus:quarkus-smallrye-health'
    implementation 'io.quarkiverse.groovy:quarkus-groovy-junit5:3.8.1'
    implementation 'io.quarkus:quarkus-arc'

    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.apache.shiro:shiro-core:2.0.0'
    implementation 'javax.transaction:jta:1.1'
    implementation 'com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.4.2'
    implementation 'oro:oro:2.0.8'
    implementation 'com.ibm.icu:icu4j:73.2'

    implementation 'javax.jms:javax.jms-api:2.0.1'
    implementation 'wsdl4j:wsdl4j:1.6.3'
    implementation 'org.apache.commons:commons-dbcp2:2.10.0'
    implementation 'org.apache.commons:commons-pool2:2.12.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.apache.geronimo.components:geronimo-transaction:3.1.5'
    implementation 'javax.el:javax.el-api:3.0.0'
    implementation 'org.freemarker:freemarker:2.3.32'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'

    //implementation 'javax.mail:javax.mail-api:1.6.2'
    implementation 'jakarta.mail:jakarta.mail-api:2.1.2'
    //implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    //implementation 'commons-lang:commons-lang:2.6'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'org.clojure:clojure:1.11.2'
    //implementation 'org.clojure:java.api:0.4.0'
    implementation 'org.apache.axis2:axis2-kernel:1.8.2'
    implementation 'org.apache.axis2:axis2-adb:1.8.2'
    implementation 'org.apache.axis2:axis2-java2wsdl:1.8.2'
    implementation 'org.apache.axis2:axis2-transport-http:1.8.2'

    //implementation 'commons-lang:commons-lang:2.6'
    implementation 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20220608.1'
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.13.22'
    implementation 'org.jsoup:jsoup:1.16.1'
    implementation 'org.apache.tika:tika-core:2.9.0'
    implementation 'org.apache.tika:tika-parsers:2.8.0'
    implementation 'org.owasp.esapi:esapi:2.5.3.1'
    implementation 'org.apache.cxf:cxf-rt-frontend-jaxrs:4.0.4'
    implementation 'org.apache.xmlgraphics:fop:2.9'
    implementation 'org.apache.commons:commons-text:1.10.0'

    implementation 'org.apache.commons:commons-csv:1.10.0'
    //implementation 'com.lowagie:itext:2.1.7'
    // https://mvnrepository.com/artifact/com.itextpdf/itextpdf
    implementation 'com.itextpdf:itextpdf:5.5.13.3'
    implementation 'org.apache.commons:commons-imaging:1.0-alpha3'
    implementation 'net.lingala.zip4j:zip4j:2.11.5'
    implementation 'com.google.re2j:re2j:1.7'
    // 2.1.3
    implementation 'de.odysseus.juel:juel:2.1.3'
    implementation 'xerces:xercesImpl:2.12.2'
    implementation 'net.sourceforge.nekohtml:nekohtml:1.9.22'

    implementation 'commons-net:commons-net:3.9.0'
    implementation 'com.google.zxing:core:3.5.2'
    implementation 'com.google.zxing:javase:3.5.2'
    implementation 'org.apache.pdfbox:pdfbox:3.0.0'
    //implementation 'com.lowagie:itext:4.2.2'
    implementation 'org.apache.ant:ant:1.10.14'
    implementation 'org.apache.ant:ant-junit:1.10.14'

    implementation 'com.auth0:java-jwt:4.4.0'

    implementation 'io.quarkus:quarkus-mailer:3.4.1'

    //implementation 'net.fortuna:ical4j:4.0.0' // Cannot be found
    implementation 'org.mnode.ical4j:ical4j:4.0.0-rc5' // Works with import net.fortuna.ical4j.*;

    // Resource
    implementation 'com.rometools:rome:2.1.0'

    implementation 'org.apache.sshd:sshd-core:2.10.0'  // Use the latest available version
    //implementation 'org.apache.sshd:sshd-client:2.10.0'  // Use the latest available version

    implementation 'org.apache.sshd:sshd-sftp:2.10.0'  // Use the latest available version

    // This needs to be changed to org.junit.jupiter:junit-jupiter-api:5.10.0
    implementation 'junit:junit:4.13.2'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'

    implementation 'org.springframework:spring-test:6.1.5'

    implementation 'org.jdom:jdom2:2.0.6.1'

    implementation 'org.apache.poi:poi:5.2.5'
    implementation 'org.apache.poi:poi-ooxml:5.2.5'

    // TODO Maybe remove the support for this or change the code for com.cybersource:cybersource-sdk-java since it is
    // not secure.
    implementation 'com.cybersource:cybersource-sdk-java:6.2.13'

    // TODO (Should it be kept or not) The classes you're trying to import are part of the PayPal Merchant SDK for Java.
    // Unfortunately, this SDK has been deprecated and is no longer available in public Maven repositories.
    // However, you can still download the SDK directly from the PayPal's Github repository and manually add it to your project.
    // The repository URL is: https://github.com/paypal/merchant-sdk-java
    //implementation 'com.paypal.sdk:paypal-core:1.7.2'
    //implementation 'com.paypal:com.paypal.sdk:1.0'
    //implementation 'com.paypal:paypalhttp:2.0.0'
    //implementation 'com.paypal:heap-dump-tool:1.1.6'
    //implementation 'com.paypal:rest-api-sdk:1.14.1'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

/*task downloadTikaParsers(type: Copy) {
    from configurations.compileClasspath.resolvedConfiguration.resolvedArtifacts.find {
        it.moduleVersion.id.group == 'org.apache.tika' && it.moduleVersion.id.name == 'tika-parsers'
    }.file
    into "${buildDir}/tmp/dependencyDownload"
}*/

group 'org.sitenetsoft'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
